// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gRPC/DestinationbardCommunicationAPI.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

/// <summary>
/// 行先ボード通信API
/// </summary>
public static partial class DestinationbardCommunicationAPI
{
  static readonly string __ServiceName = "DestinationbardCommunicationAPI";

  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  static readonly grpc::Marshaller<global::RegstStaffRequest> __Marshaller_RegstStaffRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegstStaffRequest.Parser));
  static readonly grpc::Marshaller<global::RegstStaffReply> __Marshaller_RegstStaffReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegstStaffReply.Parser));
  static readonly grpc::Marshaller<global::DeleteStaffRequest> __Marshaller_DeleteStaffRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DeleteStaffRequest.Parser));
  static readonly grpc::Marshaller<global::DeleteStaffReply> __Marshaller_DeleteStaffReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DeleteStaffReply.Parser));
  static readonly grpc::Marshaller<global::GetActionsRequest> __Marshaller_GetActionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GetActionsRequest.Parser));
  static readonly grpc::Marshaller<global::GetActionsReply> __Marshaller_GetActionsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GetActionsReply.Parser));
  static readonly grpc::Marshaller<global::GetDestinationsRequest> __Marshaller_GetDestinationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GetDestinationsRequest.Parser));
  static readonly grpc::Marshaller<global::GetDestinationsReply> __Marshaller_GetDestinationsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GetDestinationsReply.Parser));
  static readonly grpc::Marshaller<global::RegistActionPlanRequest> __Marshaller_RegistActionPlanRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistActionPlanRequest.Parser));
  static readonly grpc::Marshaller<global::RegistActionPlanReply> __Marshaller_RegistActionPlanReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistActionPlanReply.Parser));
  static readonly grpc::Marshaller<global::RegistActionsRequest> __Marshaller_RegistActionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistActionsRequest.Parser));
  static readonly grpc::Marshaller<global::RegistActionsReply> __Marshaller_RegistActionsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistActionsReply.Parser));
  static readonly grpc::Marshaller<global::RegistDestinationsRequest> __Marshaller_RegistDestinationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistDestinationsRequest.Parser));
  static readonly grpc::Marshaller<global::RegistDestinationsReply> __Marshaller_RegistDestinationsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RegistDestinationsReply.Parser));
  static readonly grpc::Marshaller<global::ActionPlanTableRequest> __Marshaller_ActionPlanTableRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ActionPlanTableRequest.Parser));
  static readonly grpc::Marshaller<global::ActionPlanTableReply> __Marshaller_ActionPlanTableReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ActionPlanTableReply.Parser));
  static readonly grpc::Marshaller<global::StaffMasterRequest> __Marshaller_StaffMasterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StaffMasterRequest.Parser));
  static readonly grpc::Marshaller<global::StaffMasterReply> __Marshaller_StaffMasterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StaffMasterReply.Parser));
  static readonly grpc::Marshaller<global::ActionMasterRequest> __Marshaller_ActionMasterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ActionMasterRequest.Parser));
  static readonly grpc::Marshaller<global::ActionMasterReply> __Marshaller_ActionMasterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ActionMasterReply.Parser));
  static readonly grpc::Marshaller<global::DestinationMasterRequest> __Marshaller_DestinationMasterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DestinationMasterRequest.Parser));
  static readonly grpc::Marshaller<global::DestinationMasterReply> __Marshaller_DestinationMasterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DestinationMasterReply.Parser));

  static readonly grpc::Method<global::RegstStaffRequest, global::RegstStaffReply> __Method_RegstStaff = new grpc::Method<global::RegstStaffRequest, global::RegstStaffReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RegstStaff",
      __Marshaller_RegstStaffRequest,
      __Marshaller_RegstStaffReply);

  static readonly grpc::Method<global::DeleteStaffRequest, global::DeleteStaffReply> __Method_DeleteStaff = new grpc::Method<global::DeleteStaffRequest, global::DeleteStaffReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteStaff",
      __Marshaller_DeleteStaffRequest,
      __Marshaller_DeleteStaffReply);

  static readonly grpc::Method<global::GetActionsRequest, global::GetActionsReply> __Method_GetActions = new grpc::Method<global::GetActionsRequest, global::GetActionsReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetActions",
      __Marshaller_GetActionsRequest,
      __Marshaller_GetActionsReply);

  static readonly grpc::Method<global::GetDestinationsRequest, global::GetDestinationsReply> __Method_GetDestinations = new grpc::Method<global::GetDestinationsRequest, global::GetDestinationsReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetDestinations",
      __Marshaller_GetDestinationsRequest,
      __Marshaller_GetDestinationsReply);

  static readonly grpc::Method<global::RegistActionPlanRequest, global::RegistActionPlanReply> __Method_RegistActionPlan = new grpc::Method<global::RegistActionPlanRequest, global::RegistActionPlanReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RegistActionPlan",
      __Marshaller_RegistActionPlanRequest,
      __Marshaller_RegistActionPlanReply);

  static readonly grpc::Method<global::RegistActionsRequest, global::RegistActionsReply> __Method_RegistActions = new grpc::Method<global::RegistActionsRequest, global::RegistActionsReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RegistActions",
      __Marshaller_RegistActionsRequest,
      __Marshaller_RegistActionsReply);

  static readonly grpc::Method<global::RegistDestinationsRequest, global::RegistDestinationsReply> __Method_RegistDestinations = new grpc::Method<global::RegistDestinationsRequest, global::RegistDestinationsReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RegistDestinations",
      __Marshaller_RegistDestinationsRequest,
      __Marshaller_RegistDestinationsReply);

  static readonly grpc::Method<global::ActionPlanTableRequest, global::ActionPlanTableReply> __Method_ActionPlanTable = new grpc::Method<global::ActionPlanTableRequest, global::ActionPlanTableReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ActionPlanTable",
      __Marshaller_ActionPlanTableRequest,
      __Marshaller_ActionPlanTableReply);

  static readonly grpc::Method<global::StaffMasterRequest, global::StaffMasterReply> __Method_StaffMaster = new grpc::Method<global::StaffMasterRequest, global::StaffMasterReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "StaffMaster",
      __Marshaller_StaffMasterRequest,
      __Marshaller_StaffMasterReply);

  static readonly grpc::Method<global::ActionMasterRequest, global::ActionMasterReply> __Method_ActionMaster = new grpc::Method<global::ActionMasterRequest, global::ActionMasterReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ActionMaster",
      __Marshaller_ActionMasterRequest,
      __Marshaller_ActionMasterReply);

  static readonly grpc::Method<global::DestinationMasterRequest, global::DestinationMasterReply> __Method_DestinationMaster = new grpc::Method<global::DestinationMasterRequest, global::DestinationMasterReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DestinationMaster",
      __Marshaller_DestinationMasterRequest,
      __Marshaller_DestinationMasterReply);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::DestinationbardCommunicationAPIReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of DestinationbardCommunicationAPI</summary>
  [grpc::BindServiceMethod(typeof(DestinationbardCommunicationAPI), "BindService")]
  public abstract partial class DestinationbardCommunicationAPIBase
  {
    /// <summary>
    /// スタッフ情報の登録
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::RegstStaffReply> RegstStaff(global::RegstStaffRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// スタッフ情報の削除
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::DeleteStaffReply> DeleteStaff(global::DeleteStaffRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行動一覧の取得
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::GetActionsReply> GetActions(global::GetActionsRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行先一覧の取得
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::GetDestinationsReply> GetDestinations(global::GetDestinationsRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行動予定の登録
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::RegistActionPlanReply> RegistActionPlan(global::RegistActionPlanRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行動一覧の更新
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::RegistActionsReply> RegistActions(global::RegistActionsRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行先一覧の更新
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::RegistDestinationsReply> RegistDestinations(global::RegistDestinationsRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 現在の行動予定一覧表
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::ActionPlanTableReply> ActionPlanTable(global::ActionPlanTableRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// スタッフマスター
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::StaffMasterReply> StaffMaster(global::StaffMasterRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行動マスター
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::ActionMasterReply> ActionMaster(global::ActionMasterRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// 行先マスター
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::DestinationMasterReply> DestinationMaster(global::DestinationMasterRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(DestinationbardCommunicationAPIBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_RegstStaff, serviceImpl.RegstStaff)
        .AddMethod(__Method_DeleteStaff, serviceImpl.DeleteStaff)
        .AddMethod(__Method_GetActions, serviceImpl.GetActions)
        .AddMethod(__Method_GetDestinations, serviceImpl.GetDestinations)
        .AddMethod(__Method_RegistActionPlan, serviceImpl.RegistActionPlan)
        .AddMethod(__Method_RegistActions, serviceImpl.RegistActions)
        .AddMethod(__Method_RegistDestinations, serviceImpl.RegistDestinations)
        .AddMethod(__Method_ActionPlanTable, serviceImpl.ActionPlanTable)
        .AddMethod(__Method_StaffMaster, serviceImpl.StaffMaster)
        .AddMethod(__Method_ActionMaster, serviceImpl.ActionMaster)
        .AddMethod(__Method_DestinationMaster, serviceImpl.DestinationMaster).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, DestinationbardCommunicationAPIBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_RegstStaff, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RegstStaffRequest, global::RegstStaffReply>(serviceImpl.RegstStaff));
    serviceBinder.AddMethod(__Method_DeleteStaff, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeleteStaffRequest, global::DeleteStaffReply>(serviceImpl.DeleteStaff));
    serviceBinder.AddMethod(__Method_GetActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetActionsRequest, global::GetActionsReply>(serviceImpl.GetActions));
    serviceBinder.AddMethod(__Method_GetDestinations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetDestinationsRequest, global::GetDestinationsReply>(serviceImpl.GetDestinations));
    serviceBinder.AddMethod(__Method_RegistActionPlan, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RegistActionPlanRequest, global::RegistActionPlanReply>(serviceImpl.RegistActionPlan));
    serviceBinder.AddMethod(__Method_RegistActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RegistActionsRequest, global::RegistActionsReply>(serviceImpl.RegistActions));
    serviceBinder.AddMethod(__Method_RegistDestinations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RegistDestinationsRequest, global::RegistDestinationsReply>(serviceImpl.RegistDestinations));
    serviceBinder.AddMethod(__Method_ActionPlanTable, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ActionPlanTableRequest, global::ActionPlanTableReply>(serviceImpl.ActionPlanTable));
    serviceBinder.AddMethod(__Method_StaffMaster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StaffMasterRequest, global::StaffMasterReply>(serviceImpl.StaffMaster));
    serviceBinder.AddMethod(__Method_ActionMaster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ActionMasterRequest, global::ActionMasterReply>(serviceImpl.ActionMaster));
    serviceBinder.AddMethod(__Method_DestinationMaster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DestinationMasterRequest, global::DestinationMasterReply>(serviceImpl.DestinationMaster));
  }

}
#endregion
